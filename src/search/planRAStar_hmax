#! /bin/bash

set -e

BASEDIR="$(dirname "$0")"

function die {
    echo "$@" 1>&2
    exit 1
}

function usage {
    die "usage: $(basename "$0") [DOMAIN_FILE] PROBLEM_FILE SEARCH_OPTION ..."
}

# Paths to planner components
TRANSLATE="../translate/translate.py"
PREPROCESS="../preprocess/preprocess"
SEARCH="./downward-1" 
SEARCH_OPTIONS="--Phase \"SOLVING\" --search \"astar(incremental_lmcut())\""

# Need to explicitly ask for GNU time (from MacPorts) on Mac OS X.
if [[ "$(uname)" == "Darwin" ]]; then
    TIME="gtime"
    if ! which $TIME >/dev/null; then
        die "$TIME must be installed on Mac OSX (from MacPorts, perhaps) for this to work"
    fi
else
    TIME="command time"
fi

TIME="$TIME --output=elapsed.time --format=%S\n%U\n"

if [[ "$#" < 2 ]]; then
    usage
fi

echo "1. Running translator"
if [[ -e "$2" ]]; then
    echo "Second argument is a file name: use two translator arguments."
    $TIME "$TRANSLATE" "$1" "$2"
    shift 2
else
    echo "Second argument is not a file name: auto-detect domain file."
    $TIME "$TRANSLATE" "$1"
    shift
fi
echo

echo "2. Running preprocessor"
$TIME --append "$PREPROCESS" < output.sas
echo

echo "3. Running search"
#command=(./RIDA_49h.sh)
#command=(./downward-1 --Phase "SAMPLING" --search "astar(max([hmax(),incremental_lmcut(),ipdb(time_limit=5),pdb_lp(systematic=2),pdb_lp(systematic=3,time_limit=60),pdb_lp(systematic=4,time_limit=60),pdb_lp(systematic=5,time_limit=60),pdb_lp(systematic=6,time_limit=60)]))")
#command=(./downward-1 --Phase "SAMPLING" --search "astar(max([hmax(),blind()]))")
#command=(./downward-1 --Phase "SOLVING" --search "astar(blind())")
#command=(./downward-1 --Phase "SOLVING" --search "astar(incremental_lmcut())")
command=(./downward-1 --Phase "SOLVING" --search "astar(hmax())")
#command=(./downward-1 --Phase "SOLVING" --search "astar(merge_and_shrink())")
#command=(./downward-1 --Phase "SOLVING" --search "astar(lmcount(lm_merged([lm_hm(m=1),lm_rhw()]),admissible=true))")
#command=(./downward-1 --Phase "SOLVING" --search "astar(pdb_lp(systematic=3,time_limit=120))")
"${command[@]}" < output "$@"
#"$SEARCH" < output "$@"
#echo "$SEARCH" "$SEARCH_OPTIONS" < output "$@"
#"$SEARCH" --Phase \"SOLVING\" --search \"astar\(incremental_lmcut\(\)\)\" < output "$@"
echo
